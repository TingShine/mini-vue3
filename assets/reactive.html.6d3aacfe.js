import{_ as p,r as c,o,c as i,a as s,b as e,e as a,d as n}from"./app.06d3405a.js";const l={},u=a(`<h1 id="reactive" tabindex="-1"><a class="header-anchor" href="#reactive" aria-hidden="true">#</a> Reactive</h1><p>\u4E00\u822C\u800C\u8A00\uFF0C\u6570\u503C\u3001\u5E03\u5C14\u503C\u3001\u5B57\u7B26\u4E32\u3001\u6570\u7EC4\u53D8\u91CF\u7684\u54CD\u5E94\u5F0F\u4F7F\u7528<code>ref</code>\uFF0C\u800C\u5BF9\u8C61\u7684\u54CD\u5E94\u5F0F\u4F7F\u7528<code>reactive</code>\uFF0C\u53EF\u4EE5\u6DF1\u5EA6\u68C0\u6D4B\u5185\u90E8\u5BF9\u8C61\u7684\u53D8\u66F4</p><h2 id="\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> \u5B9E\u73B0\u5206\u6790</h2><p>\u901A\u8FC7<code>reactive</code>\u53CC\u5411\u7ED1\u5B9A\u7684vue\u6587\u4EF6\u6837\u4F8B\uFF0C\u6211\u4EEC\u5206\u6790\u4E00\u4E0B\u9700\u8981\u5B9E\u73B0\u7684\u529F\u80FD\u7279\u6027</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> watchEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>username<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>password<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u8FF0\u6837\u4F8B\u53EF\u4EE5\u770B\u51FA\uFF0C<code>reactive</code>\u4F5C\u4E3A\u51FD\u6570\uFF0C\u53C2\u6570\u4E3A\u5BF9\u8C61\u8FDB\u884C\u8C03\u7528\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u53D8\u91CF\uFF0C\u8BE5\u53D8\u91CF\u4ECD\u7136\u5177\u6709\u5BF9\u8C61\u7684\u7279\u5F81\uFF0C\u4E14\u9700\u8981\u5177\u6709\u54CD\u5E94\u5F0F\u7684\u7279\u5F81\uFF0C\u90A3\u4E48\u5728\u53D6\u503C\u548C\u8D4B\u503C\u7684\u65F6\u5019\u5C31\u90FD\u9700\u8981\u8FDB\u884C\u76D1\u542C\u4ECB\u5165\uFF0C\u6211\u4EEC\u65E0\u6CD5\u4F7F\u7528\u4E0A\u4E00\u4E2A\u7BC7\u7AE0<code>Ref</code>\u4E00\u6837\u4F7F\u7528<code>class</code>\uFF0C\u56E0\u4E3A\u5BF9\u8C61\u91CC\u9762\u7684\u952E\u503C\u5BF9\u662F\u4E0D\u53EF\u77E5\uFF0C\u6211\u4EEC\u4F7F\u7528<code>Ref</code>\u9700\u8981\u76D1\u542C\u6BCF\u4E2A<code>key</code>\u4E5F\u662F\u4E0D\u53EF\u53D6\u7684\u3002</p>`,6),r=s("code",null,"ECMAScript 6",-1),d=n("\u63D0\u4F9B\u4E86\u4E00\u4E2A\u65B0\u7684\u7279\u6027 "),k={href:"https://es6.ruanyifeng.com/#docs/proxy",target:"_blank",rel:"noopener noreferrer"},v=n("Proxy"),m=n(" ,"),b=s("code",null,"Proxy",-1),g=n("\u4EE3\u7406\u53EF\u4EE5\u52AB\u6301\u5BF9\u8C61\uFF0C\u5BF9\u76EE\u6807\u5BF9\u8C61\u7684\u8BBF\u95EE\u90FD\u9700\u8981\u7ECF\u8FC7\u4E00\u5C42\u201C\u62E6\u622A\u201D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u4EE3\u7406\u6765\u5B9E\u73B0\u54CD\u5E94\u5F0F\u7684\u529F\u80FD\u3002"),y=a(`<p>\u90A3\u4E48\u6211\u4EEC\u53EF\u4EE5\u603B\u7ED3\u9700\u8981\u5B9E\u73B0\u7684<code>reactive</code>\u7279\u6027\u5982\u4E0B\uFF1A</p><ul><li><code>reactive</code>\u51FD\u6570\u5305\u88F9\u7684\u53C2\u6570\u4E3A\u5BF9\u8C61</li><li>\u4F7F\u7528<code>Proxy</code>\u4EE3\u7406\u52AB\u6301\u5BF9\u8C61\uFF0C\u5206\u522B\u5728<code>get</code>\u548C<code>set</code>\u7684\u65F6\u5019\u8FDB\u884C\u62E6\u622A</li></ul><details class="custom-container details"><summary>vue2\u548Cvue3\u5BF9\u6BD4</summary><p><code>vue2</code>\u4F7F\u7528<code>Object.defineProperty</code>\u8FDB\u884C\u52AB\u6301\uFF0C<code>vue3</code>\u4F7F\u7528<code>Proxy</code>\uFF0C\u4E24\u8005\u6709\u6027\u80FD\u4E0A\u548C\u4F5C\u7528\u8303\u56F4\u4E0A\u7684\u5DEE\u5F02\uFF0C\u5728\u540E\u7EED\u7AE0\u8282\u4F1A\u8FDB\u884C\u5BF9\u6BD4</p></details><h2 id="proxy\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#proxy\u4EE3\u7406" aria-hidden="true">#</a> Proxy\u4EE3\u7406</h2><p><code>reactive</code>\u7684\u6838\u5FC3\u662F\u521B\u5EFA<code>Proxy</code>\uFF0C\u5173\u952E\u5B9E\u73B0\u5E94\u8BE5\u5728\u4E8E<code>set</code>\u548C<code>get</code>\u7684\u62E6\u622A</p><h3 id="_1-\u521B\u5EFAproxy" tabindex="-1"><a class="header-anchor" href="#_1-\u521B\u5EFAproxy" aria-hidden="true">#</a> 1. \u521B\u5EFAProxy</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u521B\u5EFAreactive\u5BF9\u8C61\uFF0C\u8FD4\u56DEProxy</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reactive</span> <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFAProxy</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createReactiveObject</span> <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> mutableHandlers<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mutableHandlers</code>\u4E3A<code>get</code>\u548C<code>set</code>\u7684\u5B9E\u73B0\uFF0C\u5728\u540E\u7EED\u6B65\u9AA4\u5B9E\u73B0</p><h3 id="_2-\u7F13\u5B58\u76EE\u6807\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_2-\u7F13\u5B58\u76EE\u6807\u5BF9\u8C61" aria-hidden="true">#</a> 2. \u7F13\u5B58\u76EE\u6807\u5BF9\u8C61</h3>`,9),h=n("\u4E3A\u4E86\u907F\u514D\u76EE\u6807\u5BF9\u8C61\u91CD\u590D\u5957\u7528"),f=s("code",null,"reactive",-1),w=n("\uFF0C\u8FDB\u884C\u4E0D\u5FC5\u8981\u7684\u8BA1\u7B97\uFF0C\u4F7F\u7528 "),x={href:"https://es6.ruanyifeng.com/#docs/set-map#WeakMap",target:"_blank",rel:"noopener noreferrer"},_=n("WeakMap"),M=n(" \u7F13\u5B58\u8BE5\u5BF9\u8C61\u5F97\u5230\u7684 "),R=s("code",null,"Proxy",-1),E=n("\u4EE3\u7406\uFF0C\u5728\u4E0B\u4E00\u6B21\u8C03\u7528"),P=s("code",null,"reactive",-1),q=n("\u51FD\u6570\u65F6\u53EF\u4EE5\u76F4\u63A5\u8FD4\u56DE\u3002"),B=a(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> targetMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reactive</span> <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createReactiveObject</span> <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> existPrpxy <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token comment">// \u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u7F13\u5B58</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>existPrpxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> existPrpxy
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> mutableHandlers<span class="token punctuation">)</span>
  <span class="token comment">// \u7F13\u5B58\u5BF9\u8C61\u7684\u4EE3\u7406</span>
  targetMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span>

  <span class="token keyword">return</span> proxy
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u52AB\u6301\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_3-\u52AB\u6301\u5BF9\u8C61" aria-hidden="true">#</a> 3. \u52AB\u6301\u5BF9\u8C61</h3><p>\u4E0E<code>Ref</code>\u76F8\u4F3C\uFF0C\u6211\u4EEC\u4E3B\u8981\u5728\u83B7\u53D6\u6570\u636E\u65F6\u6536\u96C6\u4F9D\u8D56\uFF0C\u5728\u6539\u53D8\u6570\u636E\u65F6\u89E6\u53D1\u4F9D\u8D56\uFF0C\u90A3\u4E48<code>baseHandlers</code>\u4E3B\u8981\u6D89\u53CA<code>get</code>\u548C<code>set</code>\u4E24\u79CD\u64CD\u4F5C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> mutableHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
  get<span class="token punctuation">,</span>
  set
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u62E6\u622Aget" tabindex="-1"><a class="header-anchor" href="#_4-\u62E6\u622Aget" aria-hidden="true">#</a> 4. \u62E6\u622Aget</h3><p><code>Proxy</code>\u7684<code>get</code>\u7684\u521D\u59CB\u83B7\u53D6\u662F\u4EE5\u4E0B\u65B9\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> get <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u9700\u8981\u5728\u83B7\u53D6\u4E4B\u524D\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> get <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F9D\u8D56\u6536\u96C6</span>
  <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>track</code>\u51FD\u6570\u5C31\u662F\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\uFF0C\u5728\u540E\u9762\u7AE0\u8282\u6211\u4EEC\u4F1A\u5177\u4F53\u5B9E\u73B0</p><h3 id="_5-\u62E6\u622Aset" tabindex="-1"><a class="header-anchor" href="#_5-\u62E6\u622Aset" aria-hidden="true">#</a> 5. \u62E6\u622Aset</h3><p><code>Proxy</code>\u7684<code>get</code>\u7684\u521D\u59CB\u8D4B\u503C\u662F\u4EE5\u4E0B\u65B9\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u9700\u8981\u5728\u8D4B\u503C\u540E\u8FDB\u884C\u4F9D\u8D56\u89E6\u53D1\uFF08\u901A\u77E5\u8BA2\u9605\u8005\uFF09</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>

  <span class="token comment">// \u89E6\u53D1\u4F9D\u8D56</span>
  <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;set&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>trigger</code>\u51FD\u6570\u5C31\u662F\u8FDB\u884C\u4F9D\u8D56\u89E6\u53D1\uFF0C\u5728\u540E\u9762\u7AE0\u8282\u6211\u4EEC\u4F1A\u5177\u4F53\u5B9E\u73B0</p><h2 id="\u4F9D\u8D56\u6536\u96C6\u548C\u89E6\u53D1" tabindex="-1"><a class="header-anchor" href="#\u4F9D\u8D56\u6536\u96C6\u548C\u89E6\u53D1" aria-hidden="true">#</a> \u4F9D\u8D56\u6536\u96C6\u548C\u89E6\u53D1</h2><p>\u4F9D\u8D56\u6536\u96C6\u548C\u89E6\u53D1\u5C31\u662F\u5B9E\u73B0<code>track</code>\u548C<code>trigger</code>\u51FD\u6570\uFF0C\u5176\u5177\u4F53\u5B9E\u73B0\u9700\u8981\u4E0E<code>ref</code>\u6709\u5DEE\u5F02\u6027\uFF0C\u56E0\u4E3A<code>reactive</code>\u7684\u7684\u53C2\u6570\u662F\u5BF9\u8C61\uFF0C\u662F\u4E00\u4E2A\u6709\u952E\u503C\u5BF9\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u6211\u4EEC\u83B7\u53D6\u4E00\u4E2A\u5BF9\u8C61\u91CC\u7684\u4E00\u4E2A\u503C\u662F\u901A\u8FC7<code>key</code>\u53BB\u83B7\u53D6\u7684\uFF0C\u5176\u4ED6\u7684<code>key</code>\u53EF\u80FD\u4E0D\u9700\u8981\u8FDB\u884C\u76D1\u542C\u4EE5\u514D\u6D6A\u8D39\u4E0D\u5FC5\u8981\u7684\u5185\u5B58\u7A7A\u95F4\u548C\u8BA1\u7B97\u80FD\u529B\uFF0C\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5BF9<code>key</code>\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</p><h3 id="_1-\u4F9D\u8D56\u6536\u96C6" tabindex="-1"><a class="header-anchor" href="#_1-\u4F9D\u8D56\u6536\u96C6" aria-hidden="true">#</a> 1. \u4F9D\u8D56\u6536\u96C6</h3><p>\u9996\u5148\uFF0C\u5BF9<code>target</code>\u8FDB\u884C\u7F13\u5B58\uFF0C\u4EE5\u907F\u514D\u591A\u6B21\u5BF9\u8BE5\u76EE\u6807\u5BF9\u8C61\u53D6\u503C\u65F6\u91CD\u590D\u8BA1\u7B97</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> targetMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">track</span> <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token comment">// \u5224\u65AD\u662F\u5426\u9700\u8981\u6536\u96C6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u83B7\u53D6target\u5BF9\u5E94\u7684\u4F9D\u8D56\u5173\u7CFBMap</span>
  <span class="token keyword">let</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    depsMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    targetMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> depsMap<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u4F7F\u7528<code>targetMap</code>\u8FD9\u4E2A<code>WeakMap</code>\u5C06<code>target</code>\u7F13\u5B58\u8D77\u6765\uFF0C\u5176\u4E2D<code>depsMap</code>\u5C31\u662F<code>target</code>\u76F8\u5BF9\u5E94\u7684\u4F9D\u8D56Map\u5173\u7CFB</p></div><p>\u63A5\u7740\uFF0C\u6211\u4EEC\u6765\u5B9E\u73B0<code>key</code>\u5BF9\u5E94\u7684\u4F9D\u8D56\u5173\u7CFB</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> targetMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u521B\u5EFA\u4F9D\u8D56\u96C6\u5408\uFF08\u8BA2\u9605\u8005\u96C6\u5408\uFF09</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createDep</span> <span class="token operator">=</span> <span class="token punctuation">(</span>effects<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>effects<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">track</span> <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token comment">// \u5224\u65AD\u662F\u5426\u9700\u8981\u6536\u96C6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u83B7\u53D6target\u5BF9\u5E94\u7684\u4F9D\u8D56\u5173\u7CFBMap</span>
  <span class="token keyword">let</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    depsMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    targetMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> depsMap<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u83B7\u53D6key\u5BF9\u5E94\u7684\u4F9D\u8D56\u5173\u7CFBSet</span>
  <span class="token keyword">let</span> dep <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dep <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    depsMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> dep<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u5230<code>dep</code>\u53D8\u91CF\u5C31\u662F<code>key</code>\u5BF9\u5E94\u7684\u4F9D\u8D56\u96C6\u5408\uFF08\u8BA2\u9605\u8005\u96C6\u5408\uFF09\uFF0C<code>createDep</code>\u662F\u521B\u5EFA<code>Set</code>\u7C7B\u578B\u4F9D\u8D56\u96C6\u5408\u7684\u51FD\u6570</p><p>\u6700\u540E\u5C31\u662F\u6B63\u5F0F\u5C06<code>Effect</code>\u6DFB\u52A0\u8FDB\u8BE5<code>key</code>\u7684\u4F9D\u8D56\u96C6\u5408\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528\u5728<a href="./effect#_1-%E4%BE%9D%E8%B5%96%E6%94%B6%E9%9B%86">\u4F9D\u8D56\u6DFB\u52A0</a>\u4E2D\u7684<code>trackEffect</code>\u51FD\u6570\u5B9E\u73B0</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> targetMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u521B\u5EFA\u4F9D\u8D56\u96C6\u5408\uFF08\u8BA2\u9605\u8005\u96C6\u5408\uFF09</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createDep</span> <span class="token operator">=</span> <span class="token punctuation">(</span>effects<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>effects<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">track</span> <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token comment">// \u5224\u65AD\u662F\u5426\u9700\u8981\u6536\u96C6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u83B7\u53D6target\u5BF9\u5E94\u7684\u4F9D\u8D56\u5173\u7CFBMap</span>
  <span class="token keyword">let</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    depsMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    targetMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> depsMap<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u83B7\u53D6key\u5BF9\u5E94\u7684\u4F9D\u8D56\u5173\u7CFBSet</span>
  <span class="token keyword">let</span> dep <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dep <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    depsMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> dep<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">trackEffects</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u4F9D\u8D56\u89E6\u53D1" tabindex="-1"><a class="header-anchor" href="#_2-\u4F9D\u8D56\u89E6\u53D1" aria-hidden="true">#</a> 2. \u4F9D\u8D56\u89E6\u53D1</h3><p>\u4F9D\u8D56\u89E6\u53D1\u8DDF\u4F9D\u8D56\u6536\u96C6\u7684\u6B65\u9AA4\u76F8\u4F3C\uFF0C\u4F7F\u7528\u7684\u662F<a href="./effect#_2-%E8%A7%A6%E5%8F%91%E4%BE%9D%E8%B5%96">\u4F9D\u8D56\u901A\u77E5</a>\u4E2D\u7684<code>triggerEffect</code>\u51FD\u6570\u5B9E\u73B0\uFF0C\u4E0B\u9762\u662F\u5B9E\u73B0\u7684\u4EE3\u7801:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u89E6\u53D1reactive\u4F9D\u8D56</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> 

  <span class="token keyword">const</span> depSet <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>depSet<span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token function">triggerEffects</span><span class="token punctuation">(</span><span class="token function">createDep</span><span class="token punctuation">(</span>deps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FDB\u9636" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u9636" aria-hidden="true">#</a> \u8FDB\u9636</h2><p>\u6211\u4EEC\u7684\u4EE3\u7801\u90FD\u662F\u57FA\u4E8E<code>reative</code>\u7279\u6027\u800C\u5199\uFF0C\u4F46\u5176\u5B9E<code>readonly</code>\u548C<code>shallowReadonly</code>\u90FD\u8DDF<code>reative</code>\u539F\u7406\u76F8\u8FD1\uFF0C\u6211\u4EEC\u6765\u4F18\u5316\u4E00\u4E0B\u6211\u4EEC\u7684\u4EE3\u7801\u98CE\u683C\uFF0C\u4F7F\u5176\u5728\u540E\u7EED\u7BC7\u7AE0\u80FD\u591F\u88AB\u590D\u7528</p><p>\u4EE5\u4E0B\u662F\u4EE3\u7801\u7684\u4F18\u5316\u70B9\uFF1A</p><h3 id="_1-createreactiveobject\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_1-createreactiveobject\u4F18\u5316" aria-hidden="true">#</a> 1. createReactiveObject\u4F18\u5316</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createReactiveObject</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> proxyMap<span class="token punctuation">,</span> baseHandlers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> existPrpxy <span class="token operator">=</span> proxyMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>existPrpxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> existPrpxy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> baseHandlers<span class="token punctuation">)</span>
  proxyMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span>
  
  <span class="token keyword">return</span> proxy
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>createReactiveObject</code>\u53C2\u6570\u6DFB\u52A0<code>proxyMap</code>\u548C<code>baseHandlers</code>\uFF0C\u5206\u522B\u4EE3\u8868<code>target</code>\u7684\u4EE3\u7406\u7F13\u5B58\u548C\u4EE3\u7406\u7684\u52AB\u6301\u64CD\u4F5C\uFF0C\u8FD9\u6837\u540E\u671F\u652F\u6301<code>readonly</code>\u548C<code>shallowReadonly</code>\u4EC5\u9700\u8981\u6539\u53D8\u5BF9\u5E94\u7684\u4F20\u53C2\u5373\u53EF\uFF0C\u90A3\u4E48\u76F8\u5E94<code>reactive</code>\u8C03\u7528\u7684\u65F6\u5019\u9700\u8981\u66F4\u6539\u4E3A:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">reactive</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> targetMap<span class="token punctuation">,</span> mutableHandlers<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-get\u903B\u8F91\u62BD\u53D6" tabindex="-1"><a class="header-anchor" href="#_2-get\u903B\u8F91\u62BD\u53D6" aria-hidden="true">#</a> 2. get\u903B\u8F91\u62BD\u53D6</h3><p>\u6211\u4EEC\u5728<code>mutableHandlers</code>\u76F4\u63A5\u4F7F\u7528<code>get</code>\u548C<code>set</code>\u4E24\u4E2A\u62E6\u622A\u64CD\u4F5C\uFF0C<code>get</code>\u53EF\u4EE5\u88AB<code>readonly</code>\u548C<code>shallowReadonly</code>\u590D\u7528\uFF0C\u6240\u4EE5\u8BA9\u6211\u4EEC\u6765\u6539\u9020\u4E00\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createGetter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">readonly</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> shallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">)</span>
  
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// reavtive</span>
<span class="token keyword">const</span> get <span class="token operator">=</span> <span class="token function">createGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> mutableHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
  get<span class="token punctuation">,</span>
  set
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u5C06<code>get</code>\u76F8\u540C\u903B\u8F91\u62BD\u53D6\u5230<code>createGetter</code>\u4E2D\uFF0C\u901A\u8FC7\u4F20\u53C2\u7684\u65B9\u5F0F\u6765\u533A\u5206\u4E0D\u540C\u7684\u62E6\u622A\u7C7B\u578B</p><h3 id="_3-get\u62E6\u622A\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_3-get\u62E6\u622A\u4F18\u5316" aria-hidden="true">#</a> 3. get\u62E6\u622A\u4F18\u5316</h3><p>\u5728\u83B7\u53D6<code>reactive</code>\u8FD4\u56DE\u7684<code>proxy</code>\u65F6\uFF0C\u5982\u679C\u8981\u83B7\u53D6\u5176\u539F\u5BF9\u8C61\uFF0C\u548C\u5224\u65AD\u662F\u5426\u4E3A<code>reactive</code>\u6570\u636E\uFF0C\u6211\u4EEC\u9700\u8981\u5BF9\u67D0\u4E9B\u7279\u5B9A\u7684<code>key</code>\u8FDB\u884C\u5355\u72EC\u7684\u5904\u7406\u8FD4\u56DE\uFF0C\u8FD9\u91CC\u6211\u4EEC\u9009\u7528<code>_v_raw_</code>\u548C<code>_v_isReactive</code>\u4E24\u4E2A<code>key</code>\u6765\u8FDB\u884C\u5355\u72EC\u5904\u7406</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u679A\u4E3E</span>
<span class="token keyword">export</span> <span class="token keyword">enum</span> ReactiveFlags <span class="token punctuation">{</span>
  <span class="token constant">RAW</span> <span class="token operator">=</span> <span class="token string">&#39;_v_raw_&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">IS_REACTIVE</span> <span class="token operator">=</span> <span class="token string">&#39;_v_isReactive&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createGetter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">readonly</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> shallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u539F\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span> <span class="token operator">&amp;&amp;</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">===</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> target
    <span class="token punctuation">}</span>
  
    <span class="token comment">// \u83B7\u53D6\u662F\u5426\u4E3Areactive\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_REACTIVE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">)</span>
  
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u65F6\uFF0C<code>reactive</code>\u662F\u6DF1\u5C42\u6B21\u7684\uFF0C\u6240\u4EE5\u5982\u679C\u5176\u91CC\u9762\u7684\u503C\u662F\u5BF9\u8C61\u7684\u8BDD\uFF0C\u4E5F\u9700\u8981\u8FDB\u884C<code>reactive</code>\u5904\u7406\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u679A\u4E3E</span>
<span class="token keyword">export</span> <span class="token keyword">enum</span> ReactiveFlags <span class="token punctuation">{</span>
  <span class="token constant">RAW</span> <span class="token operator">=</span> <span class="token string">&#39;_v_raw_&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">IS_REACTIVE</span> <span class="token operator">=</span> <span class="token string">&#39;_v_isReactive&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createGetter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">readonly</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> shallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u539F\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span> <span class="token operator">&amp;&amp;</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">===</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> target
    <span class="token punctuation">}</span>
  
    <span class="token comment">// \u83B7\u53D6\u662F\u5426\u4E3Areactive\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_REACTIVE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  
    <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">reactive</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5355\u5143\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u5355\u5143\u6D4B\u8BD5" aria-hidden="true">#</a> \u5355\u5143\u6D4B\u8BD5</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;reactive&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;base function&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      username<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
      password<span class="token operator">:</span> <span class="token string">&#39;world&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    form<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>form<span class="token punctuation">.</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>form<span class="token punctuation">.</span>password<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token function">expect</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;reactibility&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      count<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> calls <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> form<span class="token punctuation">.</span>count
      calls<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    form<span class="token punctuation">.</span>count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;deep reactibility&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      inner<span class="token operator">:</span> <span class="token punctuation">{</span>
        count<span class="token operator">:</span> <span class="token number">1</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> calls <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> form<span class="token punctuation">.</span>inner<span class="token punctuation">.</span>count <span class="token punctuation">;</span>
      calls<span class="token operator">++</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>inner<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    form<span class="token punctuation">.</span>inner<span class="token punctuation">.</span>count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>inner<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48);function S(j,A){const t=c("ExternalLinkIcon");return o(),i("div",null,[u,s("p",null,[r,d,s("a",k,[v,e(t)]),m,b,g]),y,s("p",null,[h,f,w,s("a",x,[_,e(t)]),M,R,E,P,q]),B])}const I=p(l,[["render",S],["__file","reactive.html.vue"]]);export{I as default};
