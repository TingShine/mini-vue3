import{_ as t,r as p,o as e,c,a as o,b as i,w as l,e as s,d as n}from"./app.44535a26.js";const u={},k=s('<h1 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> Computed</h1><p><code>computed</code>\u8DDF<code>ref</code>\u7684\u7528\u6CD5\u7C7B\u4F3C\uFF0C\u90FD\u662F\u901A\u8FC7<code>.value</code>\u6765\u8BBF\u95EE\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u4E0D\u540C\u7684\u662F\u63A5\u6536\u7684\u53C2\u6570\u4E3A\u6709\u8FD4\u56DE\u503C\u7684\u51FD\u6570\uFF0C\u5F53\u51FD\u6570\u5185\u7684\u54CD\u5E94\u5F0F\u6570\u636E\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u901A\u8FC7\u81EA\u52A8\u7684\u8BA1\u7B97\u5F97\u5230\u5BF9\u5E94\u7684\u503C</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>computed</code>\u5982\u679C\u6CA1\u6709\u83B7\u53D6\u503C\u65F6\uFF0C\u662F\u4E0D\u4F1A\u4E3B\u52A8\u8FD0\u884C\u51FD\u6570\uFF0C\u907F\u514D\u591A\u4F59\u7684\u7B97\u529B\u6D88\u8017</p></div><h2 id="\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> \u5B9E\u73B0\u5206\u6790</h2><p><code>computed</code>\u5B9E\u73B0\u7684\u529F\u80FD\u4E0E<code>watchEffect</code>\u76F8\u8FD1\uFF0C\u90FD\u662F\u901A\u8FC7\u4F20\u5165\u4E00\u4E2A\u51FD\u6570\uFF0C\u5728\u4F9D\u8D56\u53D1\u751F\u53D8\u5316\u65F6\u8FD0\u884C\u51FD\u6570\uFF0C\u4E0D\u540C\u7684\u662F<code>computed</code>\u5177\u6709\u8FD4\u56DE\u503C\uFF0C\u540C\u65F6\u5728\u6CA1\u6709\u83B7\u53D6\u65F6\u4E0D\u4F1A\u4E3B\u52A8\u8FD0\u884C\u51FD\u6570\uFF0C\u90A3\u4E48\u6211\u4EEC\u53EF\u4EE5\u590D\u7528<code>effect</code>\u6765\u5B9E\u73B0</p><h2 id="\u5177\u4F53\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5177\u4F53\u5B9E\u73B0" aria-hidden="true">#</a> \u5177\u4F53\u5B9E\u73B0</h2><h3 id="_1-\u521B\u5EFAcomputedrefimf\u7C7B" tabindex="-1"><a class="header-anchor" href="#_1-\u521B\u5EFAcomputedrefimf\u7C7B" aria-hidden="true">#</a> 1. \u521B\u5EFAComputedRefImf\u7C7B</h3>',7),r=n("\u53C2\u8003"),d=n("RefImf"),v=n("\u7684\u5B9E\u73B0\uFF0C\u5148\u6784\u5EFA\u4E00\u4E2A\u7C7B\uFF0C\u4F20\u5165\u51FD\u6570\u53C2\u6570\uFF0C\u7EF4\u62A4\u4F9D\u8D56\u5217\u8868"),m=s(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createDep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./dep&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactiveEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./effect&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">ComputedRefImf</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> deps<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> effect<span class="token operator">:</span> ReactiveEffect<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u83B7\u53D6\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_2-\u83B7\u53D6\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 2. \u83B7\u53D6\u8FD4\u56DE\u503C</h3><p>\u5728\u83B7\u53D6\u503C\u65F6\uFF0C\u6784\u5EFA\u4F9D\u8D56\u5173\u7CFB\uFF0C\u8FD0\u884Ceffect\u51FD\u6570\uFF0C\u540C\u65F6\u4FDD\u5B58\u8FD4\u56DE\u503C</p><details class="custom-container details"><summary>\u601D\u8DEF</summary><p>\u5728\u6536\u96C6\u4F9D\u8D56\u65F6\uFF0C\u53EF\u4EE5\u501F\u9274<code>ref</code>\u7C7B\u7684\u5B9E\u73B0\uFF0C\u7EF4\u62A4\u7C7B\u91CC\u9762<code>dep</code>\u4F9D\u8D56\u5217\u8868\uFF0C\u7136\u540E\u6539\u9020\u4E00\u4E0B\u539F\u6765\u7684\u89E6\u53D1\u65B9\u5F0F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">trackRefValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span>ref<span class="token operator">:</span> RefImf <span class="token operator">|</span> ComputedRefImpl<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">trackEffects</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">triggerRefValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span>ref<span class="token operator">:</span> RefImf <span class="token operator">|</span> ComputedRefImpl<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">triggerEffects</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createDep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./dep&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactiveEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./effect&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> trackRefValue <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./ref&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">ComputedRefImf</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> dep<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> effect<span class="token operator">:</span> ReactiveEffect<span class="token punctuation">;</span>
  <span class="token keyword">public</span> _value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6536\u96C6\u4F9D\u8D56</span>
    <span class="token function">trackRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> _value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u4E86\u8FD9\u4E00\u6B65\uFF0C\u6211\u4EEC\u5C31\u5B9E\u73B0\u4E86\u5728\u83B7\u53D6<code>computed</code>\u503C\u7684\u65F6\u5019\u6536\u96C6\u4F9D\u8D56\uFF0C\u5C06\u7C7B\u91CC\u9762\u7684dep\u6DFB\u52A0\u8FDB\u76F8\u5173\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u4F9D\u8D56\u89E6\u53D1\u5217\u8868\u4E2D\uFF0C\u5F53\u54CD\u5E94\u5F0F\u6570\u636E\u53D1\u751F\u53D8\u5316\u65F6\u4F1A\u8FDB\u884C\u901A\u77E5</p><h3 id="_3-\u63A7\u5236\u6267\u884C\u65F6\u673A" tabindex="-1"><a class="header-anchor" href="#_3-\u63A7\u5236\u6267\u884C\u65F6\u673A" aria-hidden="true">#</a> 3. \u63A7\u5236\u6267\u884C\u65F6\u673A</h3><p><code>computed</code> \u5177\u6709\u7F13\u5B58\u7684\u7279\u6027\uFF0C\u5F53\u54CD\u5E94\u5F0F\u6570\u636E\u6CA1\u6709\u53D8\u5316\u65F6\uFF0C\u4E0D\u4F1A\u91CD\u65B0\u8C03\u7528\u76F4\u63A5\u4F7F\u7528\u539F\u6765\u7684\u7ED3\u679C\uFF0C\u6240\u4EE5\u53EF\u4EE5\u901A\u8FC7\u53D8\u91CF<code>_dirty</code>\u63A7\u5236</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createDep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./dep&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactiveEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./effect&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> trackRefValue<span class="token punctuation">,</span> triggerRefValue <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./ref&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">ComputedRefImf</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> dep<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> effect<span class="token operator">:</span> ReactiveEffect<span class="token punctuation">;</span>
  <span class="token keyword">public</span> _value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

  <span class="token comment">// \u662F\u5426\u662F\u810F\u6570\u636E\uFF0C\u907F\u514D\u91CD\u590D\u8BA1\u7B97</span>
  <span class="token keyword">public</span> _dirty<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_dirty<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token function">triggerRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6536\u96C6\u4F9D\u8D56</span>
    <span class="token function">trackRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> _value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5355\u5143\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u5355\u5143\u6D4B\u8BD5" aria-hidden="true">#</a> \u5355\u5143\u6D4B\u8BD5</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> describe<span class="token punctuation">,</span> it<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> vi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vitest&#39;</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;computed&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;reactive&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> 
      user<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> getter <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> form<span class="token punctuation">.</span>user<span class="token punctuation">)</span>

    form<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token string">&#39;world&#39;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>getter<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;computed lazy&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> 
      count<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> getter <span class="token operator">=</span> vi<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> form<span class="token punctuation">.</span>count<span class="token punctuation">)</span>
    <span class="token keyword">const</span> computedValue <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toHaveBeenCalled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>computedValue<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    computedValue<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    form<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>computedValue<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    computedValue<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function b(f,h){const a=p("RouterLink");return e(),c("div",null,[k,o("p",null,[r,i(a,{to:"/reactive/ref.html#%E5%88%9B%E5%BB%BArefimf%E7%B1%BB"},{default:l(()=>[d]),_:1}),v]),m])}const y=t(u,[["render",b],["__file","computed.html.vue"]]);export{y as default};
